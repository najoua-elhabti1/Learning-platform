name: CI/CD Workflow

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-test-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set executable permission for mvnw
        run: chmod +x backend/mvnw

      - name: Build backend JAR file
        run: ./backend/mvnw clean package -DskipTests=true
        working-directory: backend

      - name: Build backend Docker image
        run: docker build -t najouaelhabti/backend:latest -f backend/Dockerfile .

      - name: Test backend Docker image
        run: |
          docker run --rm najouaelhabti/backend:latest ./mvnw test
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/learningByDoing_db
          SPRING_DATASOURCE_USERNAME: postgres
          SPRING_DATASOURCE_PASSWORD: 123456
          SPRING_DATA_MONGODB_URI: mongodb://mongo:27017/ppt_cours
        working-directory: backend

  build-and-test-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.11.1'

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Build frontend Docker image
        run: docker build -t najouaelhabti/frontend:latest -f frontend/Dockerfile .

      - name: Test frontend Docker image
        run: |
          docker run --rm najouaelhabti/frontend:latest npm test -- --watch=false

  deploy:
    runs-on: ubuntu-latest
    needs: [build-and-test-backend, build-and-test-frontend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push backend Docker image
        run: docker push najouaelhabti/backend:latest

      - name: Push frontend Docker image
        run: docker push najouaelhabti/frontend:latest

